# File: azure-pipelines.yml
# Main AZP YAML file

name: $(Build.BuildId)

variables:
  - group: Common
  - group: Web
  - group: WebDevelopment # Change for release to production
  # Client Variables
  - name: PerceptiaOneVersionMajor
    value: '0'
  - name: PerceptiaOneVersionMinor
    value: '1'
  - name: PerceptiaOneVersionPatch
    value: '1'
  - name: PerceptiaOneImageQualified
    value: '$(DockerHubOrg)/$(PerceptiaOneImageName)'

  

trigger:
  branches:
    include:
    - master
    - develop
    - feature/*
    - hotfix/*
    - release/*
  paths:
    include:
      - infrastructure/azp/*
      - '*'
    exclude:
    - README.md
    - infrastructure/*

pr:
  autoCancel: "true"
  branches:
    include:
    - master
    - develop
    - release/*
  paths:
    exclude:
    - README.md
    - infrastructure/*

jobs:
- job: 'TestPerceptiaOneUnitTests'
- job: 'BuildPerceptiaOneImage'
  variables:
  - name: ImageQualified 
    value: $(PerceptiaOneImageQualified)
  - name: ImageVersionMajor
    value: $(PerceptiaOneVersionMajor)
  - name: ImageVersionMinor
    value: $(PerceptiaOneVersionMinor)
  - name: ImageVersionPatch
    value: $(PerceptiaOneVersionPatch)
  pool:
    vmImage: 'Ubuntu-16.04'
  dependsOn: 'TestPerceptiaOneUnitTests'
  condition: succeeded()
  steps:
  - task: Docker@1
    displayName: 'Build image'
    inputs:
      command: Build an image
      dockerFile: '$(system.defaultWorkingDirectory)/perceptia-one/Dockerfile'
      imageName: $(ImageQualified)
      qualifyImageName: false
      arguments: "--build-arg REACT_APP_WEB_SERVER_HOST=$(WebServerHost) --build-arg REACT_APP_API_SERVER_HOST=$(ApiServerHost) --build-arg REACT_APP_API_SERVER_PORT=$(ApiServerPort) --build-arg REACT_APP_API_SERVER_SCHEME=$(ApiServerScheme)"
  - template: './infrastructure/azp/template/step/dockerStandardTagPush.yml'
    parameters:
      qualifiedImageName: $(ImageQualified)
      versionMajor: $(ImageVersionMajor)
      versionMinor: $(ImageVersionMinor)
      versionPatch: $(ImageVersionPatch)
      buildId: $(Build.BuildId)
      branch: $(Build.SourceBranchName)
      tagProduction: or(eq(variables[ 'productionTags'], 'true'), startsWith(variables['Build.SourceBranch'], 'refs/heads/master/'))
